package com.changhf.chapter08;import java.util.concurrent.ExecutorService;import java.util.concurrent.Executors;import java.util.concurrent.Semaphore;/** * 信号量，用于做流量控制，如线程池资源，数据库连接资源等。 * 该例说明虽有30个线程在执行，但只允许10个线程并发执行 */public class SemaphoreTest {    private static final int THREAD_COUNT = 30;    private static ExecutorService threadPool = Executors.newFixedThreadPool(THREAD_COUNT);    private static Semaphore s = new Semaphore(10);    public static void main(String[] args) {        for (int i = 0; i < THREAD_COUNT; i++) {            threadPool.execute(() -> {                try {                    s.acquire();                    System.out.println("save data");                    s.release();                } catch (InterruptedException e) {                }            });        }        threadPool.shutdown();    }}